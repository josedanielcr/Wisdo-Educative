<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DegreeDateFuture" xml:space="preserve">
    <value>Oops! It looks like you've selected a date in the future. Please choose a date that is today or earlier.</value>
  </data>
  <data name="DuplicatedEntity" xml:space="preserve">
    <value>Oops! It looks like this item already exists in the system.</value>
  </data>
  <data name="EntityNotFound" xml:space="preserve">
    <value>Oops! We couldn't find the item you're looking for.</value>
  </data>
  <data name="HistorySaveErrorMessage" xml:space="preserve">
    <value>Oops! We ran into an issue while trying to save the item's history.</value>
  </data>
  <data name="InvalidEvaluationTaskDates" xml:space="preserve">
    <value>Oops! it looks like your selected dates are not valid, please check if the start date greater than the end date</value>
  </data>
  <data name="InvalidEvaluationTaskWeight" xml:space="preserve">
    <value>Oops! It looks like you're trying to assing more weight than the evaluation category has assigned.</value>
  </data>
  <data name="InvalidPomodoroSession" xml:space="preserve">
    <value>Oops! It looks like the pomodoro session has some invalid values.</value>
  </data>
  <data name="InvalidWeight" xml:space="preserve">
    <value>Oops! your total course weight cannot exceed 100.</value>
  </data>
  <data name="NoInterestsAvailable" xml:space="preserve">
    <value>Oops! There are no interests available</value>
  </data>
  <data name="NoStudyPlanProvided" xml:space="preserve">
    <value>Oops! You must provide a study plan to retrive all it's terms</value>
  </data>
  <data name="NotStudyPlanTermProvided" xml:space="preserve">
    <value>Oops! You must provide a study plan term</value>
  </data>
  <data name="NullProperties" xml:space="preserve">
    <value>Oops! It looks like some details for this item are missing.</value>
  </data>
  <data name="RestrictedAgeError" xml:space="preserve">
    <value>Oops! You need to have more than 13 years old</value>
  </data>
  <data name="StudyPlanAfterCreationDate" xml:space="preserve">
    <value>Oops! Your study plan term needs to start after the start date of your degre</value>
  </data>
  <data name="StudyPlanTermNotMatchWithSchedule" xml:space="preserve">
    <value>Oops! The provided dates do not match with the schedule type of your degree</value>
  </data>
  <data name="StudyTermOverlap" xml:space="preserve">
    <value>Oops! The dates for this study plan overlap with another term. Could you please pick different dates?</value>
  </data>
  <data name="UserAlreadyExistsErrorMessage" xml:space="preserve">
    <value>Oops! It looks like there's already an account with this information.</value>
  </data>
</root>